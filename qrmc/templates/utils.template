@@InitDiagramNameMapLine@@=	diagramNameMap["@@DiagramName@@"] = "@@DiagramDisplayedName@@";
@@InitDiagramNodeNameMapLine@@=	diagramNodeNameMap["@@DiagramName@@"] = "@@DiagramNodeName@@";
@@InitElementNameMapLine@@=	elementsNameMap["@@DiagramName@@"]["@@ElementName@@"] = "@@ElementDisplayedName@@";
@@InitMouseGesturesMapLine@@=	elementMouseGesturesMap["@@DiagramName@@"]["@@ElementName@@"] = "@@GesturePath@@";
@@InitPropertyTypesMapLine@@=	propertyTypes["@@ElementName@@"]["@@PropertyName@@"] = "@@PropertyType@@";
@@InitPropertyDefaultMapLine@@=	propertyDefault["@@ElementName@@"]["@@PropertyName@@"] = "@@PropertyDefaultValue@@";
@@GetGraphicalObjectLine@@=	if (element == "@@ElementName@@")\n		return new UML::@@ElementName@@();
@@GetPropertyNamesLine@@=	if (element == "@@ElementName@@")\n		result  << @@PropertiesList@@;
@@GetContainedByLine@@=	if (element == "@@ElementName@@")\n		result @@ContainedByList@@;
@@GetConnectedTypesLine@@=	if (element == "@@ElementName@@")\n		result @@ConnectedToList@@;
@@GetUsedTypesLine@@=	if (element == "@@ElementName@@")\n		result @@UsedTypesList@@ ;
@@IsNodeOrEdgeLine@@=	if (element == "@@ElementName@@")\n		return @@IsNodeOrEdgeValue@@;
@@GetEnumValuesLine@@=	if (name == "@@ElementName@@")\n		result @@EnumValuesList@@;
@@GetPossibleEdgesLine@@=	if (element == "@@ElementName@@")\n		result @@PossibleEdgesList@@;
@@EdgeInit@@=			title_@@Count@@ = factory.createTitle(@@LabelX@@, @@LabelY@@, @@LabelName@@, @@LabelReadonly@@);\n			title_@@Count@@->setBackground(Qt::white)\n			title_@@Count@@->setFlags(0);\n			title_@@Count@@->setTextInteractionFlags(Qt::NoTextInteraction);\n			titles.append(title_@@Count@@);
@@UpdateData@@=			title_@@Count@@->setHtml(QString("%1").arg(@@UpdateRole@@));
@@LabelDefinition@@=		ElementTitleInterface *title_@@Count@@;
@@NodeLoadShapeRenderer@@=			mRenderer = renderer;\n			mRenderer->load(QString(":/@@NodeName@@Class.sdf"));
@@NodeLoadPortsRenderer@@=			portRenderer->load(QString(":/@@NodeName@@Ports.sdf"));
@@NodeSetContents@@=			contents.setWidth(@@NodeWidth@@);\n			contents.setHeight(@@NodeHeight@@);
@@NodeInitPointPort@@=			pointPorts << QPointF(@@NodePortX@@, @@NodePortY@@);
@@NodeInitLinePort@@=		{\n			StatLine ln;\n			ln.line = QLineF(@@NodeLinePortStartX@@, @@NodeLinePortStartY@@, @@NodeLinePortEndX@@, @@NodeLinePortEndY@@);\n			ln.prop_x1 = @@NodeLinePortStartXScalable@@;\n			ln.prop_y1 = @@NodeLinePortStartYScalable@@;\n			ln.prop_x2 = @@NodeLinePortEndXScalable@@;\n			ln.prop_y2 = @@NodeLinePortEndYScalable@@;\n			linePorts << ln;\n		};
@@NodeInit@@=			title_@@Count@@ = factory.createTitle(@@LabelX@@, @@LabelY@@, @@LabelName@@, @@LabelReadonly@@);\n			title_@@Count@@->setBackground(Qt::transparent);\n			title_@@Count@@->setFlags(0);\n			title_@@Count@@->setTextInteractionFlags(Qt::NoTextInteraction);\n			titles.append(title_@@Count@@);
@@NodeGetBordersValid@@=list << 30 << 15 << 15 << 25;
@@NodeGetBordersInvalid@@=list << 0 << 0 << 0 << 0;
